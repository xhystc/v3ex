<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhystc.v3ex.dao.QuestionDao">
    <resultMap id="questionResultMap" type="com.xhystc.v3ex.model.Question">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="create_date" property="createDate"/>
        <result column="vote_count" property="voteCount"/>
        <association property="user" javaType="com.xhystc.v3ex.model.User" column="user_id">
            <id column="uid" property="id"/>
            <result column="name" property="name"/>
            <result column="password" property="password"/>
            <result column="email" property="email"/>
            <result column="iconUrl" property="iconUrl"/>
            <result column="salt" property="salt"/>
            <result column="is_locked" property="isLocked"/>
            <result column="regist_date" property="registDate"/>
        </association>
        <association property="tag" javaType="com.xhystc.v3ex.model.Tag" column="tag">
            <id column="tid" property="id"/>
            <result column="tag_name" property="name"/>
            <result column="tag_icon" property="icon"/>
            <result column="description" property="description"/>
            <result column="question_count" property="questionCount"/>
        </association>
    </resultMap>

    <select id="getQuestionById" parameterType="java.lang.Long" resultMap="questionResultMap">
        select q.*,u.*,u.id AS uid,t.*,t.id AS tid,t.name AS tag_name,t.icon AS tag_icon
        from question q
        LEFT JOIN user u on q.user_id=u.id
        LEFT JOIN  tag t ON q.tag = t.id
        where q.id = #{_parameter}
    </select>

    <insert id="insertQuestion" parameterType="com.xhystc.v3ex.model.Question"  useGeneratedKeys="true" keyProperty="id"  >
        INSERT INTO question(user_id, title, content, create_date,tag)
        VALUES (#{user.id},#{title},#{content},#{createDate},#{tag.id})
    </insert>
    <delete id="deleteQuestionById" parameterType="java.lang.Long">
        DELETE FROM question WHERE id = #{_parameter}
    </delete>

    <update id="updateQuestion" parameterType="com.xhystc.v3ex.model.Question">
        UPDATE question
        <set>
            <if test="user != null and user.id !=null and user.id >0">
                user_id = #{user.id},
            </if>
            <if test="tag !=null and tag.id !=null and tag.id>0">
                tag = #{tag.id}
            </if>
            <if test="content != null">
                 content = #{content},
            </if>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="createDate != null">
                 create_date = #{createDate},
            </if>
            <if test="activeTime != null">
                 active_time = #{activeTime},
            </if>

        </set>
        WHERE id = #{id}
    </update>


    <select id="selectQuestions" parameterType="com.xhystc.v3ex.model.vo.query.QuestionQueryCondition"
            resultMap="com.xhystc.v3ex.dao.QuestionDao.questionResultMap">
        SELECT  q.*,u.*,u.id AS uid,t.*,t.id AS tid,t.name AS tag_name,t.icon AS tag_icon
        FROM question q
        LEFT JOIN user  u ON q.user_id = u.id
        LEFT JOIN tag t ON q.tag = t.id
        <where>
            <if test="userId != null">
                user_id = #{userId}
            </if>
            <if test="createDate != null">
                and create_date >= #{createDate}
            </if>
            <if test="tagId !=null">
                and tag = #{tagId}
            </if>
            <if test="include != null and include.size >0">
                and q.id in
                <foreach collection="include" item="id" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>

        </where>
       <if test="needOrder">
           ORDER BY
           <choose>
               <when test="orderBy !=null ">
                   ${orderBy}
               </when>
               <otherwise>
                   create_date
               </otherwise>
           </choose>
           <choose>
               <when test="order !=null ">
                   ${order}
               </when>
               <otherwise>
                   DESC
               </otherwise>
           </choose>
       </if>
       <if test="needLimit">
           LIMIT
           <choose>
               <when test="offset >=0 and rows>0">
                   ${offset},${rows}
               </when>
               <otherwise>
                   0,20
               </otherwise>
           </choose>
       </if>

    </select>
    <select id="total" resultType="java.lang.Integer">
        SELECT count(*) FROM question
        <if test="_parameter != null">
            WHERE tag = #{_parameter}
        </if>
    </select>

</mapper>






